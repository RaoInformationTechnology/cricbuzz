{"ast":null,"code":"import { config } from '../config';\nexport default {\n  /**\n   * get live matches\n   */\n  liveScore: () => {\n    return fetch(config.baseApiUrl + \"cricket?apikey=\" + config.baseApiKey).then(res => {\n      return res.json();\n    }).catch(err => {\n      return {\n        message: 'internal server error'\n      };\n    });\n  },\n\n  /**\n   * get current and future matches\n   */\n  futureSeries: () => {\n    return fetch(config.baseApiUrl + \"matches?apikey=\" + config.baseApiKey).then(res => {\n      return res.json();\n    }).catch(err => {\n      return {\n        message: 'internal server error'\n      };\n    });\n  },\n\n  /**\n   * get matches by day wise\n   */\n  matchByDay: () => {\n    return fetch(config.baseApiUrl + \"matchCalendar?apikey=\" + config.baseApiKey).then(res => {\n      return res.json();\n    }).catch(err => {\n      return {\n        message: 'internal server error'\n      };\n    });\n  },\n\n  /**\n   * @params {json} playerName\n   * get player details by name\n   */\n  getPlayerByName: playerName => {\n    return fetch(config.baseApiUrl + \"playerFinder?apikey=\" + config.baseApiKey + \"&name=\" + playerName).then(res => {\n      return res.json();\n    }).catch(err => {\n      return {\n        message: 'internal server error'\n      };\n    });\n  },\n\n  /**\n   * @params {json} player id\n   * get player details by id\n   */\n  getPlayerById: playerId => {\n    return fetch(config.baseApiUrl + \"playerStats?apikey=\" + config.baseApiKey + \"&pid=\" + playerId).then(res => {\n      return res.json();\n    }).catch(err => {\n      return {\n        message: 'internal server error'\n      };\n    });\n  },\n\n  /**\n   * @params {json} match id\n   * get match details\n   */\n  getScore: matchId => {\n    return fetch(config.baseApiUrl + \"fantasySummary?apikey=\" + config.baseApiKey + \"&unique_id=\" + matchId).then(res => {\n      return res.json();\n    }).catch(err => {\n      return {\n        message: 'internal server error'\n      };\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/cricbuzz-webapp/src/service/matchService.js"],"names":["config","liveScore","fetch","baseApiUrl","baseApiKey","then","res","json","catch","err","message","futureSeries","matchByDay","getPlayerByName","playerName","getPlayerById","playerId","getScore","matchId"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AAEA,eAAe;AAEX;;;AAGAC,EAAAA,SAAS,EAAE,MAAM;AACb,WAAOC,KAAK,CAACF,MAAM,CAACG,UAAP,GAAkB,iBAAlB,GAAoCH,MAAM,CAACI,UAA5C,CAAL,CACFC,IADE,CACIC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHE,EAIFC,KAJE,CAIKC,GAAD,IAAS;AAAC,aAAO;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAP;AAA0C,KAJxD,CAAP;AAKH,GAXU;;AAaX;;;AAGAC,EAAAA,YAAY,EAAE,MAAM;AAChB,WAAOT,KAAK,CAACF,MAAM,CAACG,UAAP,GAAkB,iBAAlB,GAAoCH,MAAM,CAACI,UAA5C,CAAL,CACFC,IADE,CACIC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHE,EAIFC,KAJE,CAIKC,GAAD,IAAS;AAAC,aAAO;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAP;AAA0C,KAJxD,CAAP;AAKH,GAtBU;;AAwBX;;;AAGAE,EAAAA,UAAU,EAAE,MAAM;AACd,WAAOV,KAAK,CAACF,MAAM,CAACG,UAAP,GAAkB,uBAAlB,GAA0CH,MAAM,CAACI,UAAlD,CAAL,CACNC,IADM,CACAC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHM,EAINC,KAJM,CAICC,GAAD,IAAS;AAAC,aAAO;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAP;AAA0C,KAJpD,CAAP;AAKH,GAjCU;;AAmCX;;;;AAIAG,EAAAA,eAAe,EAAGC,UAAD,IAAgB;AAC7B,WAAOZ,KAAK,CAACF,MAAM,CAACG,UAAP,GAAkB,sBAAlB,GAAyCH,MAAM,CAACI,UAAhD,GAA2D,QAA3D,GAAoEU,UAArE,CAAL,CACNT,IADM,CACAC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHM,EAINC,KAJM,CAICC,GAAD,IAAS;AAAC,aAAO;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAP;AAA0C,KAJpD,CAAP;AAKH,GA7CU;;AA+CX;;;;AAIAK,EAAAA,aAAa,EAAGC,QAAD,IAAc;AACzB,WAAOd,KAAK,CAACF,MAAM,CAACG,UAAP,GAAkB,qBAAlB,GAAwCH,MAAM,CAACI,UAA/C,GAA0D,OAA1D,GAAkEY,QAAnE,CAAL,CACNX,IADM,CACAC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHM,EAINC,KAJM,CAICC,GAAD,IAAS;AAAC,aAAO;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAP;AAA0C,KAJpD,CAAP;AAKH,GAzDU;;AA2DX;;;;AAIAO,EAAAA,QAAQ,EAAGC,OAAD,IAAa;AACnB,WAAOhB,KAAK,CAACF,MAAM,CAACG,UAAP,GAAkB,wBAAlB,GAA2CH,MAAM,CAACI,UAAlD,GAA6D,aAA7D,GAA2Ec,OAA5E,CAAL,CACNb,IADM,CACAC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KAHM,EAINC,KAJM,CAICC,GAAD,IAAS;AAAC,aAAO;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAP;AAA0C,KAJpD,CAAP;AAKH;AArEU,CAAf","sourcesContent":["import { config } from '../config'\n\nexport default {\n\n    /**\n     * get live matches\n     */\n    liveScore: () => {\n        return fetch(config.baseApiUrl+\"cricket?apikey=\"+config.baseApiKey)\n            .then((res) => {\n                return res.json();\n            })\n            .catch((err) => {return {message: 'internal server error'}} );\n    },\n\n    /**\n     * get current and future matches\n     */\n    futureSeries: () => {\n        return fetch(config.baseApiUrl+\"matches?apikey=\"+config.baseApiKey)\n            .then((res) => {\n                return res.json();\n            })\n            .catch((err) => {return {message: 'internal server error'}});\n    },\n\n    /**\n     * get matches by day wise\n     */\n    matchByDay: () => {\n        return fetch(config.baseApiUrl+\"matchCalendar?apikey=\"+config.baseApiKey)\n        .then((res) => {\n            return res.json();\n        })\n        .catch((err) => {return {message: 'internal server error'}});\n    },\n\n    /**\n     * @params {json} playerName\n     * get player details by name\n     */\n    getPlayerByName: (playerName) => {\n        return fetch(config.baseApiUrl+\"playerFinder?apikey=\"+config.baseApiKey+\"&name=\"+playerName)\n        .then((res) => {\n            return res.json();\n        })\n        .catch((err) => {return {message: 'internal server error'}});\n    },\n\n    /**\n     * @params {json} player id\n     * get player details by id\n     */\n    getPlayerById: (playerId) => {\n        return fetch(config.baseApiUrl+\"playerStats?apikey=\"+config.baseApiKey+\"&pid=\"+playerId)\n        .then((res) => {\n            return res.json();\n        })\n        .catch((err) => {return {message: 'internal server error'}});\n    },\n\n    /**\n     * @params {json} match id\n     * get match details\n     */\n    getScore: (matchId) => {\n        return fetch(config.baseApiUrl+\"fantasySummary?apikey=\"+config.baseApiKey+\"&unique_id=\"+matchId)\n        .then((res) => {\n            return res.json();\n        })\n        .catch((err) => {return {message: 'internal server error'}});\n    }\n}"]},"metadata":{},"sourceType":"module"}